// BoomerEngine Script interface
// (C) 2017-2020 by Tomasz "RexDex" Jonarski
//
// Base object

//--
// native object class

// base object class, parent to all objects used in engine
// NOTE: this class is not directly extendable, use the ScriptObject (or just skip the extends ScriptObject alltogther)
import abstract class Object alias 'base::obj::IObject'
{

/*    // get class type
    final function class<Object> classType()
    {
        return GetObjectClassInfo(this).classType();
    }

    // get name of the class
    final function strid className()
    {
        return GetObjectClassInfo(this).name();
    }
    
    // get class of this object
    final function ClassInfo classInfo()
    {
        return GetObjectClassInfo(this);
    }

    // check if this object implements given class
    final function alias(isA) bool derivesFromClassName(strid className)
    {
        return GetObjectClassInfo(this).isA(className);
    }    
    
    // check if this object implements given class
    final function alias(isA) bool derivesFromClass(class<Object> classType)
    {
        return GetObjectClassInfo(this).isA(classType);
    }
    
    // check if this object implements given class
    final function alias(isA) bool derivesFromClassInfo(ref ClassInfo classInfo)
    {
        return GetObjectClassInfo(this).isA(classInfo);
    }*/
        
}

//--
// scripted object class

// base class for all clases defined in script
import class ScriptedObject alias 'base::script::ScriptedObject' extends Object
{

    // TODO: script specific functions ?
        
}

//--

// get class of this object
import function ClassInfo GetObjectClassInfo(ref ptr<Object> o);

// get class name of this object
import function strid GetObjectClassName(ref ptr<Object> o);

// get class of this object
import function class<Object> GetObjectClass(ref ptr<Object> o);

//--

