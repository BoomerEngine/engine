/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

//--

#ifndef NUM_SAMPLES
	#define NUM_SAMPLES 1
#endif

//--

descriptor TestParams
{
    Texture2D Texture;
}

//--

export shader SimpleTrianglePS
{
	in vec2 UV;
	in vec4 Color;
	
	int ComputeMask(float x)
	{
		float step = 1.0f / (float)NUM_SAMPLES;
		float alpha = step / 2.0f;
		uint mask = 0;
		for (uint i=0; i<NUM_SAMPLES; i += 1)
		{
			if (x >= alpha)
				mask |= (1 << i);
			alpha += step;
		}
		return mask;
	}
	
	void main()
	{
		float gradient = saturate(-0.05 + 1.1*UV.x);
		gradient += 0.05 * (sin(UV.y*1000) + sin(UV.x*1112));
		gl_SampleMask = ComputeMask(gradient);
		if (gl_SampleMask == 0)
			discard;
        gl_Target0 = vec4(1,0,0,1);
	}
}

export shader SimpleTriangleVS
{
	vertex Simple3DVertex v;
	in vec4 VertexColor;

	out vec4 Color;
	out vec2 UV;

	void main()
	{
		gl_Position = v.pos.xyz1;
		UV = v.uv;
		Color = v.color;
	}
}

//--