/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

//--

descriptor HistogramDesc
{
    ConstantBuffer
    {
		uint NumBuckets;
    }

	attribute(uav, format=r32i) Buffer HistogramBuffer;
}

//---

export shader ComputeHistogramMaxCS
{	
	shared int MaxValue;

    attribute(local_size_x=64, local_size_y=1)
	void main()
	{
		uint index = gl_GlobalInvocationID.x;

		// clear
		if (gl_GlobalInvocationID.x == 0)
			MaxValue = 0;
		memoryBarrierShared();

		// max count among all 
		if (index < NumBuckets)
			atomicMax(MaxValue, HistogramBuffer[index]);
		memoryBarrierShared();

		// write maximum value 
		if (gl_GlobalInvocationID.x == 0)
			HistogramBuffer[NumBuckets+2] = 5000;//MaxValue;
	}
}

//---
