/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

//--

descriptor ComputeHistogramParams
{
    ConstantBuffer
    {
        uint ImageWidth;
        uint ImageHeight;
		uint ComponentType;
		uint NumBuckets;
		float VerticalScale;
    }

    attribute(uav, format=rgba8) Texture2D InputImage;
	attribute(uav, format=r32i) Buffer MinMaxBuffer;
	attribute(coherent, uav, format=r32i) Buffer HistogramBuffer;
}

//--

export shader DrawVS
{
	void main()
	{
		gl_Position.x = -0.8f + 1.6 * (gl_VertexID / (float)NumBuckets);
		
		uint val = HistogramBuffer[gl_VertexID];
		uint maxVal = max(1, MinMaxBuffer[2]);

		gl_Position.y = 0.8f - ((val / (float)maxVal) * VerticalScale);
		gl_Position.z = 0.5f;
		gl_Position.w = 1.0f;
	}
}

export shader DrawPS
{
	void main()
	{
		if (ComponentType == 0)
			gl_Target0 = vec4(1,0,0,1);
		else if (ComponentType == 1)
			gl_Target0 = vec4(0,1,0,1);
		else if (ComponentType == 2)
			gl_Target0 = vec4(0,0,1,1);
		else
			gl_Target0 = vec4(1,1,1,1);
	}
}

//---
