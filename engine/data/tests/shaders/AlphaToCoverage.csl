/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

descriptor TestParams
{
    Texture2D Texture;
}

shader GeneratePS
{
	in vec2 UV;
	in vec4 Color;

	void main()
	{
		vec2 dir = (UV.xy - vec2(0.5f, 0.5f)) * 2.0f;
		float len = 1.0f - saturate(length(dir));

        gl_Target0 = vec4(Color.xyz,len);
	}
}

shader SimpleVS
{
	vertex Simple3DVertex v;

	out vec2 UV;
	out vec4 Color;

	void main()
	{
		gl_Position = v.pos.xyz1;
		Color = v.color;
		UV = v.uv;
	}
}


shader PreviewPS
{
	const bool Border = false;
	in vec2 UV;

	void main()
	{
		gl_Target0 = textureLod(Texture, UV.xy, 0);

		if (Border)
		{
			vec2 d = vec2(1,1) - abs((UV.xy - vec2(0.5f, 0.5f)) * 20.2f);
			if (any(d < 0.0f))
				gl_Target0 = vec4(1,1,1,1);
		}
	}
}

///---

program Generate
{	
	shader VertexShader = shader<SimpleVS> {};
	shader PixelShader = shader<GeneratePS> {};
}

program Preview
{	
	bool Border = false;
	shader VertexShader = shader<SimpleVS> {};
	shader PixelShader = shader<PreviewPS> { Border = Border };
}

export Generate = program<Generate>{};
export Preview = program<Preview>{};
export PreviewWithBorder = program<Preview>{ Border = true };