/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

//--

#include "common.h"

//--

descriptor TestParamsWrite
{
    ConstantBuffer
    {
        float TimeOffset;
        uint SideCount;
    }

    attribute(uav, format=rg16f) Buffer Colors;
}

//--

vec3 CalcPlasma(float x, float y, float t)
{
	float h = 20;
	float fx = x * h - h/2;
	float fy = y * h - h/2;

	float v = 0.0;
	v = v + sin((fx+t));
	v = v + sin((fy+t)/2.0);
	v = v + sin((fx+fy+t)/2.0);

	fx = fx + sin(t/3.0) +  h/2;
	fy = fy + cos(t/2.0) +  h/2;

	v = v + sin(sqrt(fx*fx+fy*fy+1.0)+t);
	v = v/2.0;

	return vec3(sin(PI*v), cos(PI*v), 1.0f);
}

export shader GeneratePS
{
	void main()
	{	
		gl_Target0 = vec4(0,0,0,0);
	}
}

export shader GenerateVS
{
	void main()
	{
		uint x = gl_VertexID % TestParamsWrite.SideCount;
		uint y = gl_VertexID / TestParamsWrite.SideCount;

		float invSide = 1. / TestParamsWrite.SideCount;
	    vec3 col = CalcPlasma(x * invSide, y * invSide, TestParamsWrite.TimeOffset);
        TestParamsWrite.Colors[gl_VertexID] = (col * 0.5 + 0.5).xy;

		gl_Position = vec4(0,0,0,1);
	}

}

//--
