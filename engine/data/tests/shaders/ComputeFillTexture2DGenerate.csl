/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

descriptor TestParamsWrite
{
    ConstantBuffer
    {
        vec2 ZoomOffset;
        vec2 ZoomScale;
        uint SideCount;
        uint MaxIterations;
    }

    attribute(uav, format=rgba8) Texture2D Colors;
}

export shader GenerateCS
{	
	attribute(local_size_x=16, local_size_y=16)
	void main()
	{
		vec2 pos = (gl_GlobalInvocationID.xy / (float)SideCount) * 2 - 1;
		vec2 c = ZoomOffset + pos * ZoomScale;
		vec2 z = c;

		float frac = 1.0f;
		for (int i=0; i<MaxIterations; i = i + 1)
		{
			float dist = length(z);
			if (dist > 2)
			{
				frac = i / (float) MaxIterations;
				break;
			}
				
			z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y);
			z = z + c;
		}

		float frac2 = 1.0f - pow(1.0f - frac, 9.0f);
		vec3 color = vec3(sin(PI*frac2), cos(PI*frac2), 0);
		Colors[gl_GlobalInvocationID.xy] = color.xyz1;
	}
}
