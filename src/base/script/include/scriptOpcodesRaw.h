/***
* Boomer Engine v4
* Written by Tomasz Jonarski (RexDex)
* Source code licensed under LGPL 3.0 license
* [# filter: runtime #]
***/

#ifdef OPCODE
OPCODE(Nop)

// data constants
OPCODE(Null)
OPCODE(IntOne)
OPCODE(IntZero)
OPCODE(IntConst1)
OPCODE(IntConst2)
OPCODE(IntConst4)
OPCODE(IntConst8)
OPCODE(UintConst1)
OPCODE(UintConst2)
OPCODE(UintConst4)
OPCODE(UintConst8)
OPCODE(FloatConst)
OPCODE(DoubleConst)
OPCODE(NameConst)
OPCODE(EnumConst) // vanishes during loading
OPCODE(StringConst)
OPCODE(ClassConst)
OPCODE(BoolTrue)
OPCODE(BoolFalse)

// code flow
OPCODE(Passthrough)
OPCODE(Breakpoint)
OPCODE(AssignUint1)
OPCODE(AssignUint2)
OPCODE(AssignUint4)
OPCODE(AssignUint8)
OPCODE(AssignInt1)
OPCODE(AssignInt2)
OPCODE(AssignInt4)
OPCODE(AssignInt8)
OPCODE(AssignFloat)
OPCODE(AssignDouble)
OPCODE(AssignAny)
OPCODE(LocalVar)
OPCODE(LocalCtor)
OPCODE(LocalDtor)
OPCODE(ParamVar)
OPCODE(ContextVar)
OPCODE(ContextExternalVar)
OPCODE(ContextCtor)
OPCODE(ContextDtor)
OPCODE(ContextExternalCtor)
OPCODE(ContextExternalDtor)
OPCODE(Switch)
OPCODE(SwitchLabel)
OPCODE(SwitchDefault)
OPCODE(Jump)
OPCODE(JumpIfFalse)
OPCODE(Label)
OPCODE(Conditional)
OPCODE(Constructor)
OPCODE(FinalFunc)
OPCODE(VirtualFunc)
OPCODE(StaticFunc)
OPCODE(InternalFunc)
OPCODE(LoadAny)
OPCODE(LoadInt1)
OPCODE(LoadInt2)
OPCODE(LoadInt4)
OPCODE(LoadInt8)
OPCODE(LoadUint1)
OPCODE(LoadUint2)
OPCODE(LoadUint4)
OPCODE(LoadUint8)
OPCODE(LoadFloat)
OPCODE(LoadDouble)
OPCODE(LoadStrongPtr)
OPCODE(LoadWeakPtr)
OPCODE(ReturnDirect)
OPCODE(ReturnLoad1)
OPCODE(ReturnLoad2)
OPCODE(ReturnLoad4)
OPCODE(ReturnLoad8)
OPCODE(ReturnAny)
OPCODE(Exit)
OPCODE(StructMember)
OPCODE(StructMemberRef)
OPCODE(ContextFromPtr)
OPCODE(ContextFromRef)
OPCODE(ContextFromValue)
OPCODE(ContextFromPtrRef)
OPCODE(New)
OPCODE(ThisObject)
OPCODE(ThisStruct)

// casting
OPCODE(EnumToInt32)
OPCODE(EnumToInt64)
OPCODE(EnumToName)
OPCODE(EnumToString)
OPCODE(Int32ToEnum)
OPCODE(Int64ToEnum)
OPCODE(NameToEnum)
OPCODE(DynamicCast)
OPCODE(DynamicWeakCast)
OPCODE(MetaCast)
OPCODE(WeakToStrong)
OPCODE(WeakToBool)
OPCODE(StrongToWeak)
OPCODE(StrongToBool)
OPCODE(NameToBool)
OPCODE(ClassToBool)
OPCODE(ClassToName)
OPCODE(ClassToString)

// increment/decrement
OPCODE(PreIncrement8)
OPCODE(PreIncrement16)
OPCODE(PreIncrement32)
OPCODE(PreIncrement64)
OPCODE(PreDecrement8)
OPCODE(PreDecrement16)
OPCODE(PreDecrement32)
OPCODE(PreDecrement64)
OPCODE(PostIncrement8)
OPCODE(PostIncrement16)
OPCODE(PostIncrement32)
OPCODE(PostIncrement64)
OPCODE(PostDecrement8)
OPCODE(PostDecrement16)
OPCODE(PostDecrement32)
OPCODE(PostDecrement64)

// basic float ops
OPCODE(AddFloat)
OPCODE(SubFloat)
OPCODE(MulFloat)
OPCODE(DivFloat)
OPCODE(ModFloat)
OPCODE(AddDouble)
OPCODE(SubDouble)
OPCODE(MulDouble)
OPCODE(DivDouble)
OPCODE(ModDouble)

// variant
OPCODE(CastToVariant)
OPCODE(CastFromVariant)
OPCODE(VariantIsValid)
OPCODE(VariantIsPointer)
OPCODE(VariantIsArray)
OPCODE(VariantGetType)
OPCODE(VariantToString)

// logical operations
OPCODE(LogicAnd) // special
OPCODE(LogicOr) // special
OPCODE(LogicNot)
OPCODE(LogicXor)

// comparisons
OPCODE(TestEqual)
OPCODE(TestNotEqual)
OPCODE(TestEqual1)
OPCODE(TestEqual2)
OPCODE(TestEqual4)
OPCODE(TestEqual8)
OPCODE(TestNotEqual1)
OPCODE(TestNotEqual2)
OPCODE(TestNotEqual4)
OPCODE(TestNotEqual8)
OPCODE(TestSignedLess1)
OPCODE(TestSignedLess2)
OPCODE(TestSignedLess4)
OPCODE(TestSignedLess8)
OPCODE(TestSignedLessEqual1)
OPCODE(TestSignedLessEqual2)
OPCODE(TestSignedLessEqual4)
OPCODE(TestSignedLessEqual8)
OPCODE(TestSignedGreater1)
OPCODE(TestSignedGreater2)
OPCODE(TestSignedGreater4)
OPCODE(TestSignedGreater8)
OPCODE(TestSignedGreaterEqual1)
OPCODE(TestSignedGreaterEqual2)
OPCODE(TestSignedGreaterEqual4)
OPCODE(TestSignedGreaterEqual8)
OPCODE(TestUnsignedLess1)
OPCODE(TestUnsignedLess2)
OPCODE(TestUnsignedLess4)
OPCODE(TestUnsignedLess8)
OPCODE(TestUnsignedLessEqual1)
OPCODE(TestUnsignedLessEqual2)
OPCODE(TestUnsignedLessEqual4)
OPCODE(TestUnsignedLessEqual8)
OPCODE(TestUnsignedGreater1)
OPCODE(TestUnsignedGreater2)
OPCODE(TestUnsignedGreater4)
OPCODE(TestUnsignedGreater8)
OPCODE(TestUnsignedGreaterEqual1)
OPCODE(TestUnsignedGreaterEqual2)
OPCODE(TestUnsignedGreaterEqual4)
OPCODE(TestUnsignedGreaterEqual8)
OPCODE(TestFloatEqual4)
OPCODE(TestFloatEqual8)
OPCODE(TestFloatNotEqual4)
OPCODE(TestFloatNotEqual8)
OPCODE(TestFloatLess4)
OPCODE(TestFloatLess8)
OPCODE(TestFloatLessEqual4)
OPCODE(TestFloatLessEqual8)
OPCODE(TestFloatGreater4)
OPCODE(TestFloatGreater8)
OPCODE(TestFloatGreaterEqual4)
OPCODE(TestFloatGreaterEqual8)

// number casts (LOTS of them)
OPCODE(ExpandSigned8To16)
OPCODE(ExpandSigned8To32)
OPCODE(ExpandSigned8To64)
OPCODE(ExpandSigned16To32)
OPCODE(ExpandSigned16To64)
OPCODE(ExpandSigned32To64)
OPCODE(ExpandUnsigned8To16)
OPCODE(ExpandUnsigned8To32)
OPCODE(ExpandUnsigned8To64)
OPCODE(ExpandUnsigned16To32)
OPCODE(ExpandUnsigned16To64)
OPCODE(ExpandUnsigned32To64)
OPCODE(Contract64To32)
OPCODE(Contract64To16)
OPCODE(Contract64To8)
OPCODE(Contract32To16)
OPCODE(Contract32To8)
OPCODE(Contract16To8)
OPCODE(FloatToInt8)
OPCODE(FloatToInt16)
OPCODE(FloatToInt32)
OPCODE(FloatToInt64)
OPCODE(FloatToUint8)
OPCODE(FloatToUint16)
OPCODE(FloatToUint32)
OPCODE(FloatToUint64)
OPCODE(FloatToDouble)
OPCODE(FloatFromInt8)
OPCODE(FloatFromInt16)
OPCODE(FloatFromInt32)
OPCODE(FloatFromInt64)
OPCODE(FloatFromUint8)
OPCODE(FloatFromUint16)
OPCODE(FloatFromUint32)
OPCODE(FloatFromUint64)
OPCODE(FloatFromDouble)
OPCODE(DoubleToInt8)
OPCODE(DoubleToInt16)
OPCODE(DoubleToInt32)
OPCODE(DoubleToInt64)
OPCODE(DoubleToUint8)
OPCODE(DoubleToUint16)
OPCODE(DoubleToUint32)
OPCODE(DoubleToUint64)
OPCODE(DoubleFromInt8)
OPCODE(DoubleFromInt16)
OPCODE(DoubleFromInt32)
OPCODE(DoubleFromInt64)
OPCODE(DoubleFromUint8)
OPCODE(DoubleFromUint16)
OPCODE(DoubleFromUint32)
OPCODE(DoubleFromUint64)
OPCODE(NumberToBool8)
OPCODE(NumberToBool16)
OPCODE(NumberToBool32)
OPCODE(NumberToBool64)
OPCODE(FloatToBool)
OPCODE(DoubleToBool)


// min/max/clamp
OPCODE(MinSigned8)
OPCODE(MinSigned16)
OPCODE(MinSigned32)
OPCODE(MinSigned64)
OPCODE(MaxSigned8)
OPCODE(MaxSigned16)
OPCODE(MaxSigned32)
OPCODE(MaxSigned64)
OPCODE(MinUnsigned8)
OPCODE(MinUnsigned16)
OPCODE(MinUnsigned32)
OPCODE(MinUnsigned64)
OPCODE(MaxUnsigned8)
OPCODE(MaxUnsigned16)
OPCODE(MaxUnsigned32)
OPCODE(MaxUnsigned64)
OPCODE(MinFloat)
OPCODE(MinDouble)
OPCODE(MaxFloat)
OPCODE(MaxDouble)
OPCODE(ClampSigned8)
OPCODE(ClampSigned16)
OPCODE(ClampSigned32)
OPCODE(ClampSigned64)
OPCODE(ClampUnsigned8)
OPCODE(ClampUnsigned16)
OPCODE(ClampUnsigned32)
OPCODE(ClampUnsigned64)
OPCODE(ClampFloat)
OPCODE(ClampDouble)
OPCODE(Abs8)
OPCODE(Abs16)
OPCODE(Abs32)
OPCODE(Abs64)
OPCODE(AbsFloat)
OPCODE(AbsDouble)
OPCODE(Sign8)
OPCODE(Sign16)
OPCODE(Sign32)
OPCODE(Sign64)
OPCODE(SignFloat)
OPCODE(SignDouble)

// math operations
OPCODE(AddInt8)
OPCODE(AddInt16)
OPCODE(AddInt32)
OPCODE(AddInt64)
OPCODE(SubInt8)
OPCODE(SubInt16)
OPCODE(SubInt32)
OPCODE(SubInt64)
OPCODE(MulSigned8)
OPCODE(MulSigned16)
OPCODE(MulSigned32)
OPCODE(MulSigned64)
OPCODE(MulUnsigned8)
OPCODE(MulUnsigned16)
OPCODE(MulUnsigned32)
OPCODE(MulUnsigned64)
OPCODE(DivSigned8)
OPCODE(DivSigned16)
OPCODE(DivSigned32)
OPCODE(DivSigned64)
OPCODE(DivUnsigned8)
OPCODE(DivUnsigned16)
OPCODE(DivUnsigned32)
OPCODE(DivUnsigned64)
OPCODE(ModSigned8)
OPCODE(ModSigned16)
OPCODE(ModSigned32)
OPCODE(ModSigned64)
OPCODE(ModUnsigned8)
OPCODE(ModUnsigned16)
OPCODE(ModUnsigned32)
OPCODE(ModUnsigned64)
OPCODE(NegSigned8)
OPCODE(NegSigned16)
OPCODE(NegSigned32)
OPCODE(NegSigned64)
OPCODE(NegFloat)
OPCODE(NegDouble)

// bit operations
OPCODE(BitAnd8)
OPCODE(BitAnd16)
OPCODE(BitAnd32)
OPCODE(BitAnd64)
OPCODE(BitOr8)
OPCODE(BitOr16)
OPCODE(BitOr32)
OPCODE(BitOr64)
OPCODE(BitXor8)
OPCODE(BitXor16)
OPCODE(BitXor32)
OPCODE(BitXor64)
OPCODE(BitNot8)
OPCODE(BitNot16)
OPCODE(BitNot32)
OPCODE(BitNot64)
OPCODE(BitShl8)
OPCODE(BitShl16)
OPCODE(BitShl32)
OPCODE(BitShl64)
OPCODE(BitShr8)
OPCODE(BitShr16)
OPCODE(BitShr32)
OPCODE(BitShr64)
OPCODE(BitSar8)
OPCODE(BitSar16)
OPCODE(BitSar32)
OPCODE(BitSar64)

// assignment shit
OPCODE(AddAssignInt8)
OPCODE(SubAssignInt8)
OPCODE(BitAndAssign8)
OPCODE(BitOrAssign8)
OPCODE(BitXorAssign8)
OPCODE(BitShlAssign8)
OPCODE(BitShrAssign8)
OPCODE(BitSarAssign8)
OPCODE(AddAssignInt16)
OPCODE(SubAssignInt16)
OPCODE(BitAndAssign16)
OPCODE(BitOrAssign16)
OPCODE(BitXorAssign16)
OPCODE(BitShlAssign16)
OPCODE(BitShrAssign16)
OPCODE(BitSarAssign16)
OPCODE(AddAssignInt32)
OPCODE(SubAssignInt32)
OPCODE(BitAndAssign32)
OPCODE(BitOrAssign32)
OPCODE(BitXorAssign32)
OPCODE(BitShlAssign32)
OPCODE(BitShrAssign32)
OPCODE(BitSarAssign32)
OPCODE(AddAssignInt64)
OPCODE(SubAssignInt64)
OPCODE(BitAndAssign64)
OPCODE(BitOrAssign64)
OPCODE(BitXorAssign64)
OPCODE(BitShlAssign64)
OPCODE(BitShrAssign64)
OPCODE(BitSarAssign64)

OPCODE(MulAssignSignedInt8)
OPCODE(DivAssignSignedInt8)
OPCODE(MulAssignSignedInt16)
OPCODE(DivAssignSignedInt16)
OPCODE(MulAssignSignedInt32)
OPCODE(DivAssignSignedInt32)
OPCODE(MulAssignSignedInt64)
OPCODE(DivAssignSignedInt64)
OPCODE(MulAssignUnsignedInt8)
OPCODE(DivAssignUnsignedInt8)
OPCODE(MulAssignUnsignedInt16)
OPCODE(DivAssignUnsignedInt16)
OPCODE(MulAssignUnsignedInt32)
OPCODE(DivAssignUnsignedInt32)
OPCODE(MulAssignUnsignedInt64)
OPCODE(DivAssignUnsignedInt64)

OPCODE(AddAssignFloat)
OPCODE(SubAssignFloat)
OPCODE(MulAssignFloat)
OPCODE(DivAssignFloat)

OPCODE(AddAssignDouble)
OPCODE(SubAssignDouble)
OPCODE(MulAssignDouble)
OPCODE(DivAssignDouble)

OPCODE(Max)
#endif