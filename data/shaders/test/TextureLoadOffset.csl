/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

descriptor TestParams
{
    attribute(nosampler, format=rgba8) Texture2D TestImage;
}

export shader SimpleTrianglePS
{
	in vec2 UV;

	void main()
	{
		ivec2 size = imageSize(TestImage);
		ivec2 texelCoords = frac(UV.xy) * size;

		vec4 c = TestImage[texelCoords] * 8;
		c -= TestImage[texelCoords + ivec2(-1,-1)];
		c -= TestImage[texelCoords + ivec2(0,-1)];
		c -= TestImage[texelCoords + ivec2(1,-1)];
		c -= TestImage[texelCoords + ivec2(-1,0)];
		c -= TestImage[texelCoords + ivec2(1,0)];
        c -= TestImage[texelCoords + ivec2(-1,1)];
        c -= TestImage[texelCoords + ivec2(0,1)];
        c -= TestImage[texelCoords + ivec2(1,1)];

        gl_Target0 = c;
	}
}

export shader SimpleTriangleVS
{
	vertex Simple3DVertex v;

	out vec2 UV;

	attribute(glflip)
	void main()
	{
		gl_Position = v.pos.xyz1;
		UV = v.uv;
	}
}
