/***
* Boomer Engine v4 2015-2017
* Written by Tomasz "Rex Dex" Jonarski
***/

#include "common.h"

descriptor TestParamsWrite
{
    ConstantBuffer
    {
        uint SideCount;
        uint FrameIndex;
    }

    attribute(coherent, uav, format=rgba8) Buffer ColorsWrite;
}

export shader GenerateCS
{	
	attribute(local_size_x=8, local_size_y=8)
	void main()
	{
		vec2 pos = gl_GlobalInvocationID.xy / 512.0f;
        uint texelIndex = gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * 512);

        float angle = atan2(pos.y - 0.25f, pos.x - 0.33f);
        float treshold1 = 0.25 + cos(angle * 3.0f + TestParamsWrite.FrameIndex * 0.01f) * 0.1f;
        float treshold2 = 0.5 + cos(angle * 7.0f + TestParamsWrite.FrameIndex * 0.05f) * 0.3f;
        float treshold3 = 0.75 + cos(angle * 11.0f + TestParamsWrite.FrameIndex * 0.005f) * 0.4f;

		float dist = distance(pos, 0.5);
		if (dist < treshold1)
			ColorsWrite[texelIndex] = pos.xy01;
		else if (dist < treshold2)
			ColorsWrite[texelIndex] = vec4(1,1,1,1) - pos.xy01;
		else if (dist < treshold3)		
            ColorsWrite[texelIndex] = abs(frac(angle)).x000;
		else
			ColorsWrite[texelIndex] = vec4(0,0,0,0) - pos.xy01;
	}
}
