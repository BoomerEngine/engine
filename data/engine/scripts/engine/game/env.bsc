/*
 * Boomer Engine (C) 2017-2020 by Tomasz "Rex Dex" Jonarski
 * Engine Interface Files
*/

using Core;

// Frame Tick Order:
//  - env.OnInput()
//  - env.OnFrameStart(dt)
//  - tick all the scenes (scene.OnTick)
//  - env.OnFrameFinalize(dt)
//  - env.OnRender()
//  - 

// basic class for top level simulation environments
import class Env
    alias 'game::Environment'
    extends Core.ScriptedObject
{
    //--

    // all ticked scenes in the environment
    // NOTE: iterating over everything is a bad idea :)
    import var array<ScenePtr> scenes;

    //--

    // attach scene to the env, scene will be simulated and can be used for rendering
    // NOTE: attaching the same scene twice does nothing
    import function AttachScene(ref ScenePtr sceneToAttach);

    // detach scene from the env, starting from the next ticks scene will not be simulated
    // NOTE: if there are no other references to the scene it may end up being deleted
    import function DetachScene(ref ScenePtr sceneToDetach);

    //--

	// attach a global tickable sub system
	import function AttachSubSystem(ref SubSystemPtr subSystemToAttach);
	
	// detach a previously attached sub-system
	// NOTE: sub system may be detached only at the next frame
	import function DetachSubSystem(ref SubSystemPtr subSystemToDetach);
	
	//--
	
	// attach a global input handler
	import function AttachInputHandler(ref InputHandlerPtr inputHandler);
	
	// detach a global input handler
	import function DetachInputHandler(ref InputHandlerPtr inputHandler);
	
	//--

    // are we top-level paused? (ie. our window got deactivated, etc)
    // NOTE: scenes are no ticked when paused (no game state update, no simulation etc) but they can still render
    // NOTE: do not use this is as a GAME PAUSE, this is more like OS pause
    import function bool IsPaused();

    // request a top level pause
    // NOTE: scenes will stop simulating, the only thing getting any ticking will be the env.onTick
    import function RequestPause();

    // request a top level resume of the paused state
    import function RequestResume();

    // request exit from the application to hosting desktop
    import function RequestExit();

    //--

    // initialize simulation environment, called just after application start
    signal bool OnInitialize(ref CommandLine cmdLine);
    
    // called every frame before scenes are ticked
    signal OnFrameStart(float dt);
    
    // called every frame after scenes were ticked
    signal OnFrameTick(float dt);

	// render debug canvas elements (mostly 2D HUD/menu/consoles, etc)
	signal OnRenderCanvas(ref ptr<Canvas> canvas);

    //--

}


