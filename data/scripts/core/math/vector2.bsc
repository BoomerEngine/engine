// BoomerEngine Script interface
// (C) 2017-2020 by Tomasz "RexDex" Jonarski
//
// Math types
// NOTE: internal file, do not modify

//---

// 2D vector
import struct Vector2 alias 'base::Vector2'
{
    import var float x;
    import var float y;

    // get length of the vector
    import function float Length();

    // get square length of the vector (faster)
    import function float SquareLength();

    // get vector with absolute values of components
    import function Vector2 Abs();

    // get vector with components rounded to nearest integer
    import function Vector2 Round();

    // get vector with components rounded down to integer
    import function Vector2 Floor();

    // get vector with components rounded up to integer
    import function Vector2 Ceil();

    // get vector with components values without fractional parts
    import function Vector2 Trunc();

    // get vector with components with fractional parts
    import function Vector2 Frac();

    // get minimum value of components
    import function float MinValue();

    // get maximum value of components
    import function float MaxValue();

    // get sum of components
    import function float Sum();

    // get trace (product of all components)
    import function float Trace();

    // get length of vector between two points
    import function float Distance(ref Vector2 v);

    // get length of vector between two points
    import function float SquareDistance(ref Vector2 v);

    // get index of largest axis (0, 1 or 2)
    import function int LargestAxis();

    // get index of smallest axis (0, 1 or 2)
    import function int SmallestAxis();

    // normalize vector, returns length of the vector before normalization
    import function float Normalize();

    // return normalized vector
    import function Vector2 Normalized();

    //--

    // get 2D sub vector
    import function Vector2 xx();
    import function Vector2 xy();
    import function Vector2 yx();
    import function Vector2 yy();

    // get 3D sub vector
    import function Vector3 xyz(float z = 0.0f);

    // make into a 4D vector
    import function Vector4 xyzw(float z = 0.0f, float w = 1.0f);
    
    //--
    
    // generate random vector
    import static function Vector2 Random(float min = 0.0f, float max = 1.0f);
}

// math operators
import operator- Vector2 (ref Vector2 b);
import operator~ Vector2 (ref Vector2 b); // prependicular vector
import operator+ Vector2 (ref Vector2 a, ref Vector2 b);
import operator- Vector2 (ref Vector2 a, ref Vector2 b);
import operator* Vector2 (ref Vector2 a, ref Vector2 b);
import operator/ Vector2 (ref Vector2 a, ref Vector2 b);
import operator| float (ref Vector2 a, ref Vector2 b); // dot product

import operator+= Vector2 (out Vector2 a, ref Vector2 b);
import operator-= Vector2 (out Vector2 a, ref Vector2 b);
import operator*= Vector2 (out Vector2 a, ref Vector2 b);
import operator/= Vector2 (out Vector2 a, ref Vector2 b);

import operator+ Vector2 (ref Vector2 a, float b);
import operator- Vector2 (ref Vector2 a, float b);
import operator* Vector2 (ref Vector2 a, float b);
import operator/ Vector2 (ref Vector2 a, float b);
import operator* Vector2 (float a, ref Vector2 b);

import operator+= Vector2 (out Vector2 a, float b);
import operator-= Vector2 (out Vector2 a, float b);
import operator*= Vector2 (out Vector2 a, float b);
import operator/= Vector2 (out Vector2 a, float b);

import function alias(Abs) Vector2 AbsV2(ref Vector2 a);
import function alias(Dot) float DotV2(ref Vector2 a, ref Vector2 b);
import function alias(Min) Vector2 MinV2(ref Vector2 a, ref Vector2 b);
import function alias(Max) Vector2 MaxV2(ref Vector2 a, ref Vector2 b);
import function alias(Lerp) Vector2 LerpV2(ref Vector2 a, ref Vector2 b, float f);
import function alias(Normal) Vector2 NormalV2(ref Vector2 a, ref Vector2 n);
import function alias(Tangent) Vector2 TangentV2(ref Vector2 a, ref Vector2 n);
import function alias(SetLength) Vector2 SetLengthV2(ref Vector2 a, float length);
import function alias(ClampLength) Vector2 ClampLengthV2(ref Vector2 a, float length);
import function alias(Clamp) Vector2 ClampV2(ref Vector2 a, ref Vector2 minV, ref Vector2 maxV);
import function alias(Clamp) Vector2 ClampV2F(ref Vector2 a, float minF, float maxV);

